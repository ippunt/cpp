//Next line for professor
// /home/jdarling2/cpp/jdarling2_lab11.cpp
#include <iostream> 
#include <fstream>
#include <math.h>
#include <string>
// was only needed for toupper#include <cctype>
using namespace std;
double nfly;
struct dbinfo
{
int ID;
char yayornay;
string date;
float cost;
string comment;

};
dbinfo mydbinfo;
void initialize(int& lc, int list[]);
void copyText(ifstream& intext, ofstream& outtext, char& ch,
              int list[]);
void characterCount(char ch, int list[]);
void writeTotal(ofstream& outtext, int lc, int list[]);
void appeandl(dbinfo zzzz);
void appeandout(dbinfo zzzz);
void print();
void copya();
fstream fs;
ifstream infile;
ofstream outfile;


int main()
{
    int alterlinect ,happy , altertimes, alterc, alterline,lineCount, timesadd, add, first,gtotal,count;
    int letterCount[26];
    char ch, choice, choicea,choiceb,second;
    float fourth;
    string third, fifth,next, line,linea;
    fs.open ("lab11.txt", fstream::in | fstream::out | fstream::app);
    infile.open("lab11.txt");                      //Step 2
    ifstream myfile ("lab11.txt");
    if (!infile)                                    //Step 3
    {
        cout << "Cannot open the input file." 
             << endl;
        return 1;
    }
   
    outfile.open("labbytestout.txt");                    //Step 4

    initialize(lineCount, letterCount);             //Step 5
    cout<<"Would you like to see your database file? If yes press y if not n"<<endl;
    cin>>choicea;
    if ((choicea == 'y') || (choicea == 'Y'))
	print();
    cout<<" Would you like to make an entry in the file database? If yes press y"<<endl;
    cin>>choice;
    if ((choice == 'y') || (choice == 'Y'))
    {   cout<<"How many times would you like to appeand to database?"<<endl;
	cin>>timesadd;
	for (add=0; add < timesadd ; add++)
	{ 
	   appeandl(mydbinfo);
        }
   }

    infile.get(ch);                                 //Step 6
    while (infile)                                  //Step 7
    {
        copyText(infile, outfile, ch, letterCount); //Step 7.1
        lineCount++;                                //Step 7.2
        infile.get(ch);                             //Step 7.3
    }

    writeTotal(outfile, lineCount, letterCount);    //Step 8
    
    gtotal = 0;

    infile.close();infile.open("lab11.txt");
    fs.close();
    fs.open("lab11.txt");
    cin.clear();
    cin.sync();
    for ( count =0; count < lineCount; count++)
        {
          
           infile >>first>>second>>third>>fourth>>fifth;
          gtotal = gtotal + fourth;

       }
    outfile.close();
    outfile.open("lab11a.txt");
    infile.close();infile.open("lab11.txt");//reset the pointer back to beginning of file!
    cout<<" Would you like to alter a line in the file?"<<endl;
    cin>>choiceb;
    if ((choiceb == 'y') || (choiceb =='Y')){
	cout<<"How many times would you like to alter the file?"<<endl;
        cin>>altertimes;
	
	for (alterc =0 ; alterc < altertimes ; alterc++)
            {cout<<"which line would you like to alter?"<<endl;
	     cin>>alterline;
	     infile.close();outfile.close();outfile.open("lab11a.txt");
	     infile.open("lab11.txt");//files need to be open at beginning of file
	     for (alterlinect=1;alterlinect < alterline;alterlinect++)
                 { infile >>first>>second>>third>>fourth>>fifth;
	          outfile<<first<<" "<<second<<" "<<third<<" "<<fourth<<" "<<fifth<<endl;	
		  }
	      appeandout(mydbinfo);//create full data line and write to file
              infile >>first>>second>>third>>fourth>>fifth;
              for (alterlinect = alterlinect ; alterlinect < lineCount; alterlinect++)
		       { 	//copy rest of orig to temp file
		            infile >>first>>second>>third>>fourth>>fifth;
		            outfile<<first<<" "<<second<<" "<<third<<" "<<fourth<<" "<<fifth<<endl;	
		        } 
	      copya();//each iteration needs to update original file
            }

        }
    // }	  

    infile.close();infile.open("lab11.txt");
    infile>>first>>second>>third>>fourth>>fifth;
    infile.close();                                 //Step 9
    outfile.close();
    fs.close();
    cout<<endl;
    happy = nfly / lineCount * 100;
    cout<<"Percentage of times I was satisfied with purchase--> "<<happy<<"% "<<endl;
    cout<<"Grand total I spent $"<<gtotal<<endl;
    return 0;
}// END OF MAIN
void appeandl(dbinfo zzzz) 
{
   cout<<" What would you like your ID to be?"<<endl;
   cin>> zzzz.ID;
   cout<<" Was this a good purchase?Please use capital letter! Y or N"<<endl;
   cin>>zzzz.yayornay;
   cout<<" What is the date of purchase?"<< endl;
   cin>>zzzz.date;
   cout<<" What is the cost of purchase?"<< endl;
   cin>>zzzz.cost;
   cin.ignore(100,'\n');
   cout<<" Any comment you would like to add for this purchase? Please use _ as spacing_inbetween_words_and_no_capital_letters"<<endl;
   getline(cin , zzzz.comment);
   cout<<zzzz.ID<<zzzz.yayornay<<zzzz.date<<zzzz.cost<<zzzz.comment<<endl;
   fs<<zzzz.ID<<" "<<zzzz.yayornay<<" "<<zzzz.date<<" "<<zzzz.cost<<" "<<zzzz.comment<<endl;


} //end appeandl*/
void appeandout(dbinfo zzzz)
{
   cout<<" What would you like your ID to be?"<<endl;
   cin>>zzzz.ID;
   cout<<" Was this a good purchase?Please use capital letter! Y or N"<<endl;
   cin>>zzzz.yayornay;
   cout<<" What is the date of purchase?"<< endl;
   cin>>zzzz.date;
   cout<<" What is the cost of purchase?"<< endl;
   cin>>zzzz.cost;
   cin.ignore(100,'\n');
   cout<<" Any comment you would like to add for this purchase? Please use _ as spacing inbetween words"<<endl;
   getline(cin , zzzz.comment);
   cout<<zzzz.ID<<zzzz.yayornay<<zzzz.date<<zzzz.cost<<zzzz.comment<<endl;
   outfile<<zzzz.ID<<" "<<zzzz.yayornay<<" "<<zzzz.date<<" "<<zzzz.cost<<" "<<zzzz.comment<<endl;

} //end appeandl*/

void initialize(int& lc, int list[])
{
    int j;
    lc = 0;

    for (j = 0; j < 26; j++)
        list[j] = 0;
} //end initialize

void copyText(ifstream& intext, ofstream& outtext, char& ch,
              int list[])
{
    while (ch != '\n')      //process the entire line
    {
        outtext << ch;      //output the character

        characterCount(ch, list);   //call the function 
                                    //character count
        intext.get(ch);     //read the next character
    }
    outtext << ch;          //output the newline character
} //end copyText

void characterCount(char ch, int list[])
{
    int index;   //,indexa;
//    ch = toupper(ch);                       //Step a

    index = static_cast<int>(ch)
            - static_cast<int>('A');        //Step b

    
    if (0 <= index && index < 26)          //Step c
    {    list[index]++;
	 nfly = list[24];
     }

     
} //end characterCount

void writeTotal(ofstream& outtext, int lc, int list[])
{
    int index;

    outtext << endl << endl;
    outtext << "The number of lines = " << lc << endl;

    for (index = 0; index < 26; index++) 
        outtext << static_cast<char>(index + static_cast<int>('A'))
                << " count = " << list[index] << endl;
   
 
} 
void print()//function
{
    string line;
    ifstream myfile ("lab11.txt");
    if (myfile.is_open())
    {
      while ( getline (myfile,line) )
      {
       cout << line << '\n';
      }
    myfile.close();
  }
}
void copya()//function
{
    string line;
    ifstream myfile ("lab11a.txt");
    if (myfile.is_open())
    { 
      fs.close();
      fs.open ("lab11.txt", fstream::in | fstream::out | ios::trunc);
      while ( getline (myfile,line) )
      {
       fs << line << '\n';
      }
    fs.close();
    myfile.close();
  }
}

