#Unnecessary code and a little of a mess used this during t-shooting
#include <iostream>
#include <cstdlib>
#include <ctime>
#include <string>

using namespace std;

enum objectType{ROCK, PAPER, SCISSORS, LIZARD, SPOCK};

        //Function prototypes
objectType retrievePlay(char selection);
bool validSelection(char selection);
void convertEnum(objectType object);
objectType winningObject(objectType play1, objectType play2);
void gameResult(objectType play1, objectType play2,
                int& winner);
void displayResults(int gCount, int wCount1, int wCount2);

int main()
{
        //Step 1
    int gameCount; //variable to store the number of
                   //games played
    int winCount1; //variable to store the number of games
                   //won by player 1
    int winCount2; //variable to store the number of games
                   //won by player 2
    int gamewinner;
//    char response;  //variable to get the user's response to
                    //play the game
    char selection1;
    char selection2;
    objectType play1;  //player1's selection
    objectType play2;  //player2's selection

        //Initialize variables; Step 2
    gameCount = 0;
    winCount1 = 0;
    winCount2 = 0;
    int count;
    srand(time(0));
    for(count =0; count <=20; count++)
    {
        int num,numb;
        //srand(time(0));
        string letters = "RrPpSsLlZz";
        numb = rand() % 10;
        selection1 = letters[numb];
        //cout << "Selection 1 is"<< selection1;
        //srand(time(0));
        num = rand() % 10;
        selection2 = letters[num];
        //cout << "Selection 2 is"<< selection2;

            //Step 6e
        if (0<10)
        {
            play1 = retrievePlay(selection1);
            play2 = retrievePlay(selection2);
            gameCount++;                          //Step 6e.i
            gameResult(play1, play2, gamewinner); //Step 6e.ii

            if (gamewinner == 1)                  //Step 6e.iii
                winCount1++;
            else if (gamewinner == 2)
                winCount2++;
        }//end if

    }//end while

    displayResults(gameCount, winCount1,
                   winCount2);                    //Step 7

    return 0;
}//end main

bool validSelection(char selection)
{
    switch (selection)
    {
    case 'R':
    case 'r':
    case 'P':
    case 'p':
    case 'S':
    case 's':
    case 'L':
    case 'l':
    case 'Z':
    case 'z':
        return true;
    default:
        return false;
    }
}

objectType retrievePlay(char selection)
{
    objectType object;

    switch (selection)
    {
    case 'R':
    case 'r':
        object = ROCK;
        break;
    case 'P':
    case 'p':
        object = PAPER;
        break;
    case 'S':
    case 's':
        object = SCISSORS;
        break;
    case 'L':
    case 'l':
        object = LIZARD;
        break;
    case 'Z':
    case 'z':
        object = SPOCK;
        break;
    }
    return object;

}

void convertEnum(objectType object)
{
    switch (object)
    {
    case ROCK:
        cout << "Rock";
        break;
    case PAPER:
        cout << "Paper";
        break;
    case SCISSORS:
         cout << "Scissors";
        break;
   case SPOCK:
        cout << "SPOCK";
        break;
    case LIZARD:
        cout << "LIZARD";
    }
}

objectType winningObject(objectType play1, objectType play2)
{
    if ((play1 == ROCK && play2 == SCISSORS)
          || (play2 == ROCK && play1 == SCISSORS) || (play1 == ROCK && play2 == LIZARD) || (play2 == ROCK && play1 == LIZARD))
        return ROCK;
    else if ((play1 == ROCK && play2 == PAPER)
              || (play2 == ROCK && play1 == PAPER) || (play1 == PAPER && play2== SPOCK) || (play2 == PAPER && play1 == SPOCK))
        return PAPER;
    else if (( play1 == SCISSORS && play2 == PAPER) || (play2 == SCISSORS && play1 == PAPER) || (play1 == SCISSORS && play2 == LIZARD) || (play2 == SCISSORS && play1 == LIZARD))
        return SCISSORS;
    else if ((play1 == LIZARD && play2 == PAPER) || (play2 == LIZARD && play1 ==PAPER) || (play1 == LIZARD && play2 == SPOCK) || (play2 == LIZARD && play1 == SPOCK) || ( play1 == LIZARD && play2 == SPOCK))
        return LIZARD;
    else //if ((play1 == SPOCK && play2 == ROCK) || (play2 == SPOCK && play1 == ROCK) || (play1 == SPOCK && play2 == SCISSORS) || (play2 == SPOCK && play1 == SCISSORS))
        return SPOCK;

}


void gameResult(objectType play1, objectType play2,
                int& winner)
{
    objectType winnerObject;

    if (play1 == play2)
    {
        winner = 0;
        cout << "Both players selected ";
        convertEnum(play1);
        cout << ". This game is a tie." << endl;
    }
    else
    {
        winnerObject = winningObject(play1, play2);

            //Output each player's choice
        cout << "Player 1 selected ";
        convertEnum(play1);
        cout << " and player 2 selected ";
        convertEnum(play2);
        cout << ". ";

            //Decide the winner
        if (play1 == winnerObject)
            winner = 1;
        else if (play2 == winnerObject)
            winner = 2;

            //Output the winner
        cout << "Player " << winner << " wins this game."
             << endl;
    }
}

void displayResults(int gCount, int wCount1, int wCount2)
{
    cout << "The total number of plays: " << gCount
         << endl;
    cout << "The number of plays won by player 1: "
         << wCount1 << endl;
    cout << "The number of plays won by player 2: "
         << wCount2 << endl;
}
                                                              210,1         Bot
